/*
 *  Developed by Vasileios Karachountris Foteini Kotsimpou and Eva Konstantopoulou for Computer Engineering and
 *  Informatics Department, to be used in the Database Laboratory Project that they submit.
 *  All Rights Reserved.
 */
package mainpackage;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import static mainpackage.CheckConnection.url;

/**
 *
 * @author Vasilis
 */
public class reviseArticle extends javax.swing.JFrame
{

    /**
     * Creates new form reviseArticle
     */
    public reviseArticle()
    {
	initComponents();
        FillComboArticle();
        FillTextPath();
        FillTextSummary();
        FillTextAuthor();
        FillTextKeyWords();
        FillTextCategory();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ArticleCombo = new javax.swing.JComboBox<>();
        PathLabel = new javax.swing.JLabel();
        TitleLabel = new javax.swing.JLabel();
        SummaryLabel = new javax.swing.JLabel();
        AuthorLabel = new javax.swing.JLabel();
        KeyWordsLabel = new javax.swing.JLabel();
        CategoryLabel = new javax.swing.JLabel();
        PathText = new javax.swing.JTextField();
        TitleText = new javax.swing.JTextField();
        SummaryText = new javax.swing.JTextField();
        AuthorText = new javax.swing.JTextField();
        KeyWordsText = new javax.swing.JTextField();
        CategoryText = new javax.swing.JTextField();
        ExitButton = new javax.swing.JButton();
        ViewButton = new javax.swing.JButton();
        ReviseButton = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Choose article you want to revise:");

        ArticleCombo.setMaximumRowCount(10);
        ArticleCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArticleComboActionPerformed(evt);
            }
        });

        PathLabel.setText("Path:");

        TitleLabel.setText("Title:");

        SummaryLabel.setText("Summary:");

        AuthorLabel.setText("Author:");

        KeyWordsLabel.setText("Key Words:");

        CategoryLabel.setText("Category:");

        PathText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PathTextActionPerformed(evt);
            }
        });

        TitleText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TitleTextActionPerformed(evt);
            }
        });

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        ViewButton.setText("View Details");
        ViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewButtonActionPerformed(evt);
            }
        });

        ReviseButton.setText("Revise");
        ReviseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReviseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ArticleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SummaryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AuthorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(KeyWordsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(CategoryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PathText, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(TitleText)
                            .addComponent(SummaryText)
                            .addComponent(AuthorText)
                            .addComponent(KeyWordsText)
                            .addComponent(CategoryText))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ViewButton)
                            .addComponent(ReviseButton)
                            .addComponent(ExitButton))))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ArticleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PathLabel)
                            .addComponent(PathText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TitleLabel)
                            .addComponent(TitleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ViewButton))
                        .addGap(22, 22, 22)
                        .addComponent(SummaryLabel))
                    .addComponent(SummaryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AuthorLabel)
                            .addComponent(AuthorText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(ReviseButton)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KeyWordsLabel)
                    .addComponent(KeyWordsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CategoryLabel)
                            .addComponent(CategoryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(ExitButton)))
                .addContainerGap(140, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ArticleComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArticleComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ArticleComboActionPerformed

    private void TitleTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TitleTextActionPerformed
        // TODO add your handling code here:
        TitleText.setText(ArticleCombo.getSelectedItem().toString());
    }//GEN-LAST:event_TitleTextActionPerformed

    private void PathTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PathTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PathTextActionPerformed

    private void ViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewButtonActionPerformed
        // TODO add your handling code here:
        FillTextPath();
        TitleText.getText();
        FillTextSummary();
        FillTextAuthor();
        FillTextKeyWords();
        FillTextCategory();
    }//GEN-LAST:event_ViewButtonActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // TODO add your handling code here:
         new Journalist().setVisible(true); 
	 this.dispose(); 
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void ReviseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReviseButtonActionPerformed
        // TODO add your handling code here:
        try 
	{
	    Connection con = DriverManager.getConnection(url);
            String value0 = ArticleCombo.getSelectedItem().toString();
            String value1 = PathText.getText();
	    String value2 = TitleText.getText();
	    String value3 = SummaryText.getText();
	    String value4 = KeyWordsText.getText();
	    String value5 = AuthorText.getText();
	    Integer value6 = Integer.parseInt(CategoryText.getText());
            String sql = "UPDATE article SET article_path = ? AND title = ? AND summary = ? AND key_word = ? AND editor_email = ? AND category_id = ? WHERE title = ? ";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1,value1);
	    pst.setString(2,value2);
	    pst.setString(3,value3);
	    pst.setString(4,value4);
	    pst.setString(5,value5);
	    pst.setInt(6,value6);
            pst.setString(7,value0);
	    ResultSet rs = pst.executeQuery();
            JOptionPane.showMessageDialog(null,"update successful");
	    con.close();
            
        }       
        catch(Exception e)
        {
            //JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_ReviseButtonActionPerformed
private void FillComboArticle()
    {
	try
	{
	    //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");       
	    //String url ="jdbc:sqlserver://projectapp.database.windows.net:1433;databaseName=dlab1;user=admin1@projectapp;password=EvaeisaiGTP*;encrypt=true;trustServerCertificate=false;loginTimeout=30;";
	    Connection con = DriverManager.getConnection(url);
	    String sql = "SELECT title FROM article";
	    PreparedStatement pst = con.prepareStatement(sql);
	    ResultSet rs = pst.executeQuery();
	    while(rs.next())
	    {
		String name = rs.getString("title");
		ArticleCombo.addItem(name);		
	    }	
	}
	catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }  
private void FillTextPath()
    {
	try
	{
	    //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");       
	    //String url ="jdbc:sqlserver://projectapp.database.windows.net:1433;databaseName=dlab1;user=admin1@projectapp;password=EvaeisaiGTP*;encrypt=true;trustServerCertificate=false;loginTimeout=30;";
	    TitleText.setText(ArticleCombo.getSelectedItem().toString());
            String thisTitle = TitleText.getText();
            Connection con = DriverManager.getConnection(url);
	    String sql = "SELECT article_path FROM article WHERE title = '"+thisTitle+"'";
	    PreparedStatement pst = con.prepareStatement(sql);
	    ResultSet rs = pst.executeQuery();
	    while(rs.next())
	    {
		String name = rs.getString("article_path");
                PathText.setText(name);		
	    }	
	}
	catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }  
private void FillTextSummary()
    {
	try
	{
	    //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");       
	    //String url ="jdbc:sqlserver://projectapp.database.windows.net:1433;databaseName=dlab1;user=admin1@projectapp;password=EvaeisaiGTP*;encrypt=true;trustServerCertificate=false;loginTimeout=30;";
	    TitleText.setText(ArticleCombo.getSelectedItem().toString());
            String thisTitle = TitleText.getText();
            Connection con = DriverManager.getConnection(url);
	    String sql = "SELECT summary FROM article WHERE title = '"+thisTitle+"'";
	    PreparedStatement pst = con.prepareStatement(sql);
	    ResultSet rs = pst.executeQuery();
	    while(rs.next())
	    {
		String name = rs.getString("summary");
                SummaryText.setText(name);
            }	
	}
	catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }  
    private void FillTextAuthor()
    {
	try
	{
	    //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");       
	    //String url ="jdbc:sqlserver://projectapp.database.windows.net:1433;databaseName=dlab1;user=admin1@projectapp;password=EvaeisaiGTP*;encrypt=true;trustServerCertificate=false;loginTimeout=30;";
	    TitleText.setText(ArticleCombo.getSelectedItem().toString());
            String thisTitle = TitleText.getText();
            Connection con = DriverManager.getConnection(url);
	    String sql = "SELECT editor_email FROM article WHERE title = '"+thisTitle+"'";
	    PreparedStatement pst = con.prepareStatement(sql);
	    ResultSet rs = pst.executeQuery();
	    while(rs.next())
	    {
		String name = rs.getString("editor_email");
                AuthorText.setText(name);		
	    }	
	}
	catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }  
    private void FillTextKeyWords()
    {
	try
	{
	    //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");       
	    //String url ="jdbc:sqlserver://projectapp.database.windows.net:1433;databaseName=dlab1;user=admin1@projectapp;password=EvaeisaiGTP*;encrypt=true;trustServerCertificate=false;loginTimeout=30;";
	    TitleText.setText(ArticleCombo.getSelectedItem().toString());
            String thisTitle = TitleText.getText();
            Connection con = DriverManager.getConnection(url);
	    String sql = "SELECT key_word FROM article WHERE title = '"+thisTitle+"'";
	    PreparedStatement pst = con.prepareStatement(sql);
	    ResultSet rs = pst.executeQuery();
	    while(rs.next())
	    {
		String name = rs.getString("key_word");
                KeyWordsText.setText(name);		
	    }	
	}
	catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }  
    private void FillTextCategory()
    {
	try
	{
	    //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");       
	    //String url ="jdbc:sqlserver://projectapp.database.windows.net:1433;databaseName=dlab1;user=admin1@projectapp;password=EvaeisaiGTP*;encrypt=true;trustServerCertificate=false;loginTimeout=30;";
	    TitleText.setText(ArticleCombo.getSelectedItem().toString());
            String thisTitle = TitleText.getText();
            Connection con = DriverManager.getConnection(url);
	    String sql = "SELECT category_id FROM article WHERE title = '"+thisTitle+"'";
	    PreparedStatement pst = con.prepareStatement(sql);
	    ResultSet rs = pst.executeQuery();
	    while(rs.next())
	    {
		String name = rs.getString("category_id");
                CategoryText.setText(name);		
	    }	
	}
	catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }  
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
	/* Set the Nimbus look and feel */
	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
	/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
	 */
	try
	{
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
	    {
		if ("Nimbus".equals(info.getName()))
		{
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	} catch (ClassNotFoundException ex)
	{
	    java.util.logging.Logger.getLogger(reviseArticle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (InstantiationException ex)
	{
	    java.util.logging.Logger.getLogger(reviseArticle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (IllegalAccessException ex)
	{
	    java.util.logging.Logger.getLogger(reviseArticle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (javax.swing.UnsupportedLookAndFeelException ex)
	{
	    java.util.logging.Logger.getLogger(reviseArticle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	//</editor-fold>

	/* Create and display the form */
	java.awt.EventQueue.invokeLater(new Runnable()
	{
	    public void run()
	    {
		new reviseArticle().setVisible(true);
	    }
	});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ArticleCombo;
    private javax.swing.JLabel AuthorLabel;
    private javax.swing.JTextField AuthorText;
    private javax.swing.JLabel CategoryLabel;
    private javax.swing.JTextField CategoryText;
    private javax.swing.JButton ExitButton;
    private javax.swing.JLabel KeyWordsLabel;
    private javax.swing.JTextField KeyWordsText;
    private javax.swing.JLabel PathLabel;
    private javax.swing.JTextField PathText;
    private javax.swing.JButton ReviseButton;
    private javax.swing.JLabel SummaryLabel;
    private javax.swing.JTextField SummaryText;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JTextField TitleText;
    private javax.swing.JButton ViewButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
